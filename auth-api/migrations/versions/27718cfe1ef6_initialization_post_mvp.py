"""Initialization Post MVP

Revision ID: 27718cfe1ef6
Revises: 414773385d34
Create Date: 2019-08-15 12:54:04.945145

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '27718cfe1ef6'
down_revision = '414773385d34'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact_link',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['org.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('affiliation', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('affiliation', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('affiliation', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.drop_constraint('affiliation_created_by_fkey', 'affiliation', type_='foreignkey')
    op.create_foreign_key(None, 'affiliation', 'user', ['modified_by_id'], ['id'])
    op.create_foreign_key(None, 'affiliation', 'user', ['created_by_id'], ['id'])
    op.drop_column('affiliation', 'created_by')
    op.add_column('contact', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('contact', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('contact', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('contact', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'contact', 'user', ['modified_by_id'], ['id'])
    op.create_foreign_key(None, 'contact', 'user', ['created_by_id'], ['id'])
    op.add_column('entity', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('entity', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('entity', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('entity', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.add_column('entity', sa.Column('pass_code', sa.String(length=75), nullable=True))
    op.create_foreign_key(None, 'entity', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'entity', 'user', ['modified_by_id'], ['id'])
    op.add_column('membership', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('membership', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('membership', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'membership', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'membership', 'user', ['modified_by_id'], ['id'])
    op.add_column('membership_type', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('membership_type', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('membership_type', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('membership_type', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'membership_type', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'membership_type', 'user', ['modified_by_id'], ['id'])
    op.add_column('org', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('org', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('org', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.add_column('org', sa.Column('preferred_payment_code', sa.String(length=15), nullable=False))
    op.drop_constraint('org_contact2_fkey', 'org', type_='foreignkey')
    op.drop_constraint('org_preferred_payment_fkey', 'org', type_='foreignkey')
    op.drop_constraint('org_last_modified_by_fkey', 'org', type_='foreignkey')
    op.drop_constraint('org_contact1_fkey', 'org', type_='foreignkey')
    op.drop_constraint('org_created_by_fkey', 'org', type_='foreignkey')
    op.create_foreign_key(None, 'org', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'org', 'payment_type', ['preferred_payment_code'], ['code'])
    op.create_foreign_key(None, 'org', 'user', ['modified_by_id'], ['id'])
    op.drop_column('org', 'preferred_payment')
    op.drop_column('org', 'contact2')
    op.drop_column('org', 'last_modified')
    op.drop_column('org', 'contact1')
    op.drop_column('org', 'last_modified_by')
    op.drop_column('org', 'created_by')
    op.add_column('org_status', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('org_status', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('org_status', sa.Column('default', sa.Boolean(), nullable=False))
    op.add_column('org_status', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('org_status', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'org_status', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'org_status', 'user', ['modified_by_id'], ['id'])
    op.add_column('org_type', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('org_type', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('org_type', sa.Column('default', sa.Boolean(), nullable=False))
    op.add_column('org_type', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('org_type', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'org_type', ['code'])
    op.create_foreign_key(None, 'org_type', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'org_type', 'user', ['modified_by_id'], ['id'])
    op.add_column('payment_type', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('payment_type', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('payment_type', sa.Column('default', sa.Boolean(), nullable=False))
    op.add_column('payment_type', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('payment_type', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'payment_type', ['code'])
    op.create_foreign_key(None, 'payment_type', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'payment_type', 'user', ['modified_by_id'], ['id'])
    op.add_column('user', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('modified_by_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user', 'user', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'user', 'user', ['modified_by_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'modified_by_id')
    op.drop_column('user', 'created_by_id')
    op.drop_column('payment_type', 'modified_by_id')
    op.drop_column('payment_type', 'modified')
    op.drop_column('payment_type', 'default')
    op.drop_column('payment_type', 'created_by_id')
    op.drop_column('payment_type', 'created')
    op.drop_column('org_type', 'modified_by_id')
    op.drop_column('org_type', 'modified')
    op.drop_column('org_type', 'default')
    op.drop_column('org_type', 'created_by_id')
    op.drop_column('org_type', 'created')
    op.drop_column('org_status', 'modified_by_id')
    op.drop_column('org_status', 'modified')
    op.drop_column('org_status', 'default')
    op.drop_column('org_status', 'created_by_id')
    op.drop_column('org_status', 'created')
    op.add_column('org', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('org', sa.Column('last_modified_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('org', sa.Column('contact1', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org', sa.Column('last_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('org', sa.Column('contact2', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org', sa.Column('preferred_payment', sa.VARCHAR(length=15), autoincrement=False, nullable=False))
    op.create_foreign_key('org_created_by_fkey', 'org', 'user', ['created_by'], ['id'])
    op.create_foreign_key('org_contact1_fkey', 'org', 'contact', ['contact1'], ['id'])
    op.create_foreign_key('org_last_modified_by_fkey', 'org', 'user', ['last_modified_by'], ['id'])
    op.create_foreign_key('org_preferred_payment_fkey', 'org', 'payment_type', ['preferred_payment'], ['code'])
    op.create_foreign_key('org_contact2_fkey', 'org', 'contact', ['contact2'], ['id'])
    op.drop_column('org', 'preferred_payment_code')
    op.drop_column('org', 'modified_by_id')
    op.drop_column('org', 'modified')
    op.drop_column('org', 'created_by_id')
    op.drop_column('membership_type', 'modified_by_id')
    op.drop_column('membership_type', 'modified')
    op.drop_column('membership_type', 'created_by_id')
    op.drop_column('membership_type', 'created')
    op.drop_column('membership', 'modified_by_id')
    op.drop_column('membership', 'modified')
    op.drop_column('membership', 'created_by_id')
    op.drop_column('entity', 'pass_code')
    op.drop_column('entity', 'modified_by_id')
    op.drop_column('entity', 'modified')
    op.drop_column('entity', 'created_by_id')
    op.drop_column('entity', 'created')
    op.drop_column('contact', 'modified_by_id')
    op.drop_column('contact', 'modified')
    op.drop_column('contact', 'created_by_id')
    op.drop_column('contact', 'created')
    op.add_column('affiliation', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('affiliation_created_by_fkey', 'affiliation', 'user', ['created_by'], ['id'])
    op.drop_column('affiliation', 'modified_by_id')
    op.drop_column('affiliation', 'modified')
    op.drop_column('affiliation', 'created_by_id')
    op.drop_table('contact_link')
    # ### end Alembic commands ###
