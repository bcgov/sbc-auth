"""empty message

Revision ID: 9f63681d5e6a
Revises: b32d868d628c
Create Date: 2019-09-09 12:58:53.497338

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import Boolean, String
from sqlalchemy.sql import column, table


# revision identifiers, used by Alembic.
revision = '9f63681d5e6a'
down_revision = '615db0d23fee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invitation_status',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('code', sa.String(length=15), nullable=False),
    sa.Column('desc', sa.String(length=100), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('invitation',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_email', sa.String(length=100), nullable=False),
    sa.Column('sent_date', sa.DateTime(), nullable=False),
    sa.Column('accepted_date', sa.DateTime(), nullable=True),
    sa.Column('invitation_status_code', sa.String(length=15), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['invitation_status_code'], ['invitation_status.code'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invitation_membership',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invitation_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('membership_type_code', sa.String(length=15), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['invitation_id'], ['invitation.id'], ),
    sa.ForeignKeyConstraint(['membership_type_code'], ['membership_type.code'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['org.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    invitation_status_table = table('invitation_status',
                                  column('code', String),
                                  column('desc', String),
                                  column('default', Boolean)
                                  )
    op.bulk_insert(
        invitation_status_table,
        [
            {'code': 'PENDING', 'desc': 'Initial state of the invitation', 'default': True},
            {'code': 'ACCEPTED', 'desc': 'State when the user accepts the invitation', 'default': False},
            {'code': 'EXPIRED', 'desc': 'State when the invitation expires or gets deleted', 'default': False}
        ]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invitation_membership')
    op.drop_table('invitation')
    op.drop_table('invitation_status')
    # ### end Alembic commands ###
