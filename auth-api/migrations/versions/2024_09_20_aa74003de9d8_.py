"""empty message

Revision ID: aa74003de9d8
Revises: 69f7b110a98c
Create Date: 2024-09-20 11:19:42.551199

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aa74003de9d8'
down_revision = '69f7b110a98c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('affidavits_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.String(length=60), autoincrement=False, nullable=True),
    sa.Column('issuer', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.String(length=15), autoincrement=False, nullable=False),
    sa.Column('decision_made_by', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['status_code'], ['affidavit_statuses.code'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('affidavits_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_affidavits_history_document_id'), ['document_id'], unique=False)

    op.create_table('orgs_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_code', sa.String(length=15), autoincrement=False, nullable=False),
    sa.Column('status_code', sa.String(length=30), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('branch_name', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('access_type', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_by', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('bcol_user_id', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('bcol_account_id', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('bcol_account_name', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('suspended_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('suspension_reason_code', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('has_api_access', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('business_type', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('business_size', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('is_business_account', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_size'], ['business_size_codes.code'], name='orgs_business_size_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['business_type'], ['business_type_codes.code'], name='orgs_business_type_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['status_code'], ['org_statuses.code'], ),
    sa.ForeignKeyConstraint(['suspension_reason_code'], ['suspension_reason_codes.code'], name='orgs_suspension_reason_code_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['type_code'], ['org_types.code'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('orgs_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orgs_history_access_type'), ['access_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_orgs_history_name'), ['name'], unique=False)

    op.create_table('account_login_options_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('login_source', sa.String(length=20), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('affiliations_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('certified_by_name', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('environment', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('affiliations_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_affiliations_history_entity_id'), ['entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_affiliations_history_environment'), ['environment'], unique=False)

    op.create_table('contacts_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('street', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('street_additional', sa.String(length=250), autoincrement=False, nullable=True),
    sa.Column('city', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('region', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('country', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('delivery_instructions', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('phone', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('phone_extension', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('email', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('entity_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('contacts_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contacts_history_street'), ['street'], unique=False)

    op.create_table('memberships_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('membership_type_code', sa.String(length=15), autoincrement=False, nullable=False),
    sa.Column('status', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['membership_type_code'], ['membership_types.code'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['status'], ['membership_status_codes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('memberships_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_memberships_history_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_memberships_history_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_memberships_history_user_id'), ['user_id'], unique=False)

    op.create_table('org_settings_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('setting', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('product_subscriptions_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('product_code', sa.String(length=15), autoincrement=False, nullable=False),
    sa.Column('status_code', sa.String(length=30), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['product_code'], ['product_codes.code'], ),
    sa.ForeignKeyConstraint(['status_code'], ['product_subscriptions_statuses.code'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('product_subscriptions_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_subscriptions_history_org_id'), ['org_id'], unique=False)

    op.create_table('contact_links_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('entity_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('org_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('affidavit_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['affidavit_id'], ['affidavits.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('contact_links_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contact_links_history_contact_id'), ['contact_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contact_links_history_entity_id'), ['entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contact_links_history_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contact_links_history_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.drop_index('ix_activity_transaction_id')

    op.drop_table('activity')
    with op.batch_alter_table('memberships_version', schema=None) as batch_op:
        batch_op.drop_index('ix_memberships_version_end_transaction_id')
        batch_op.drop_index('ix_memberships_version_operation_type')
        batch_op.drop_index('ix_memberships_version_org_id')
        batch_op.drop_index('ix_memberships_version_status')
        batch_op.drop_index('ix_memberships_version_transaction_id')
        batch_op.drop_index('ix_memberships_version_user_id')

    op.drop_table('memberships_version')
    with op.batch_alter_table('users_version', schema=None) as batch_op:
        batch_op.drop_index('ix_users_version_email')
        batch_op.drop_index('ix_users_version_end_transaction_id')
        batch_op.drop_index('ix_users_version_first_name')
        batch_op.drop_index('ix_users_version_idp_userid')
        batch_op.drop_index('ix_users_version_last_name')
        batch_op.drop_index('ix_users_version_operation_type')
        batch_op.drop_index('ix_users_version_transaction_id')
        batch_op.drop_index('ix_users_version_username')

    op.drop_table('users_version')
    with op.batch_alter_table('account_login_options_version', schema=None) as batch_op:
        batch_op.drop_index('ix_account_login_options_version_end_transaction_id')
        batch_op.drop_index('ix_account_login_options_version_operation_type')
        batch_op.drop_index('ix_account_login_options_version_transaction_id')

    op.drop_table('account_login_options_version')
    with op.batch_alter_table('affiliations_version', schema=None) as batch_op:
        batch_op.drop_index('ix_affiliations_version_end_transaction_id')
        batch_op.drop_index('ix_affiliations_version_entity_id')
        batch_op.drop_index('ix_affiliations_version_environment')
        batch_op.drop_index('ix_affiliations_version_operation_type')
        batch_op.drop_index('ix_affiliations_version_transaction_id')

    op.drop_table('affiliations_version')
    with op.batch_alter_table('contact_links_version', schema=None) as batch_op:
        batch_op.drop_index('ix_contact_links_version_contact_id')
        batch_op.drop_index('ix_contact_links_version_end_transaction_id')
        batch_op.drop_index('ix_contact_links_version_entity_id')
        batch_op.drop_index('ix_contact_links_version_operation_type')
        batch_op.drop_index('ix_contact_links_version_org_id')
        batch_op.drop_index('ix_contact_links_version_transaction_id')
        batch_op.drop_index('ix_contact_links_version_user_id')

    op.drop_table('contact_links_version')
    with op.batch_alter_table('affidavits_version', schema=None) as batch_op:
        batch_op.drop_index('ix_affidavits_version_document_id')
        batch_op.drop_index('ix_affidavits_version_end_transaction_id')
        batch_op.drop_index('ix_affidavits_version_operation_type')
        batch_op.drop_index('ix_affidavits_version_transaction_id')

    op.drop_table('affidavits_version')
    with op.batch_alter_table('org_settings_version', schema=None) as batch_op:
        batch_op.drop_index('ix_org_settings_version_end_transaction_id')
        batch_op.drop_index('ix_org_settings_version_operation_type')
        batch_op.drop_index('ix_org_settings_version_transaction_id')

    op.drop_table('org_settings_version')
    with op.batch_alter_table('product_subscriptions_version', schema=None) as batch_op:
        batch_op.drop_index('ix_product_subscriptions_version_end_transaction_id')
        batch_op.drop_index('ix_product_subscriptions_version_operation_type')
        batch_op.drop_index('ix_product_subscriptions_version_org_id')
        batch_op.drop_index('ix_product_subscriptions_version_transaction_id')

    op.drop_table('product_subscriptions_version')
    with op.batch_alter_table('orgs_version', schema=None) as batch_op:
        batch_op.drop_index('ix_orgs_version_access_type')
        batch_op.drop_index('ix_orgs_version_end_transaction_id')
        batch_op.drop_index('ix_orgs_version_name')
        batch_op.drop_index('ix_orgs_version_operation_type')
        batch_op.drop_index('ix_orgs_version_transaction_id')

    op.drop_table('orgs_version')
    op.drop_table('transaction')
    with op.batch_alter_table('contacts_version', schema=None) as batch_op:
        batch_op.drop_index('ix_contacts_version_end_transaction_id')
        batch_op.drop_index('ix_contacts_version_operation_type')
        batch_op.drop_index('ix_contacts_version_street')
        batch_op.drop_index('ix_contacts_version_transaction_id')

    op.drop_table('contacts_version')
    with op.batch_alter_table('affiliation_invitation_types', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('affiliation_invitations', schema=None) as batch_op:
        batch_op.alter_column('token',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('is_deleted',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.create_index(batch_op.f('ix_affiliation_invitations_affiliation_id'), ['affiliation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_affiliation_invitations_entity_id'), ['entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_affiliation_invitations_from_org_id'), ['from_org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_affiliation_invitations_to_org_id'), ['to_org_id'], unique=False)
        batch_op.create_foreign_key(None, 'affiliations', ['affiliation_id'], ['id'])

    with op.batch_alter_table('product_codes', schema=None) as batch_op:
        batch_op.alter_column('parent_code',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=75),
               existing_nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('version')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('version', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False))

    with op.batch_alter_table('product_codes', schema=None) as batch_op:
        batch_op.alter_column('parent_code',
               existing_type=sa.String(length=75),
               type_=sa.VARCHAR(length=15),
               existing_nullable=True)

    with op.batch_alter_table('affiliation_invitations', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_affiliation_invitations_to_org_id'))
        batch_op.drop_index(batch_op.f('ix_affiliation_invitations_from_org_id'))
        batch_op.drop_index(batch_op.f('ix_affiliation_invitations_entity_id'))
        batch_op.drop_index(batch_op.f('ix_affiliation_invitations_affiliation_id'))
        batch_op.alter_column('is_deleted',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('token',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               existing_nullable=True)

    with op.batch_alter_table('affiliation_invitation_types', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    op.create_table('contacts_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('street', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('street_additional', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('delivery_instructions', sa.VARCHAR(length=4096), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('phone_extension', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='contact_version_pkey')
    )
    with op.batch_alter_table('contacts_version', schema=None) as batch_op:
        batch_op.create_index('ix_contacts_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_contacts_version_street', ['street'], unique=False)
        batch_op.create_index('ix_contacts_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_contacts_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('transaction',
    sa.Column('issued_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_pkey')
    )
    op.create_table('orgs_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('access_type', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_by', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bcol_account_id', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('bcol_user_id', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('suspended_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('bcol_account_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('suspension_reason_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('branch_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('has_api_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_business_account', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('business_size', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('business_type', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='org_version_pkey')
    )
    with op.batch_alter_table('orgs_version', schema=None) as batch_op:
        batch_op.create_index('ix_orgs_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_orgs_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_orgs_version_name', ['name'], unique=False)
        batch_op.create_index('ix_orgs_version_end_transaction_id', ['end_transaction_id'], unique=False)
        batch_op.create_index('ix_orgs_version_access_type', ['access_type'], unique=False)

    op.create_table('product_subscriptions_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='product_subscription_version_pkey')
    )
    with op.batch_alter_table('product_subscriptions_version', schema=None) as batch_op:
        batch_op.create_index('ix_product_subscriptions_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_product_subscriptions_version_org_id', ['org_id'], unique=False)
        batch_op.create_index('ix_product_subscriptions_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_product_subscriptions_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('org_settings_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('setting', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='org_settings_version_pkey')
    )
    with op.batch_alter_table('org_settings_version', schema=None) as batch_op:
        batch_op.create_index('ix_org_settings_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_org_settings_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_org_settings_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('affidavits_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('issuer', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('decision_made_by', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('decision_made_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='affidavit_version_pkey')
    )
    with op.batch_alter_table('affidavits_version', schema=None) as batch_op:
        batch_op.create_index('ix_affidavits_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_affidavits_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_affidavits_version_end_transaction_id', ['end_transaction_id'], unique=False)
        batch_op.create_index('ix_affidavits_version_document_id', ['document_id'], unique=False)

    op.create_table('contact_links_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('affidavit_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='contact_link_version_pkey')
    )
    with op.batch_alter_table('contact_links_version', schema=None) as batch_op:
        batch_op.create_index('ix_contact_links_version_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_contact_links_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_contact_links_version_org_id', ['org_id'], unique=False)
        batch_op.create_index('ix_contact_links_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_contact_links_version_entity_id', ['entity_id'], unique=False)
        batch_op.create_index('ix_contact_links_version_end_transaction_id', ['end_transaction_id'], unique=False)
        batch_op.create_index('ix_contact_links_version_contact_id', ['contact_id'], unique=False)

    op.create_table('affiliations_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('certified_by_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('environment', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='affiliation_version_pkey')
    )
    with op.batch_alter_table('affiliations_version', schema=None) as batch_op:
        batch_op.create_index('ix_affiliations_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_affiliations_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_affiliations_version_environment', ['environment'], unique=False)
        batch_op.create_index('ix_affiliations_version_entity_id', ['entity_id'], unique=False)
        batch_op.create_index('ix_affiliations_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('account_login_options_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('login_source', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='account_login_options_version_pkey')
    )
    with op.batch_alter_table('account_login_options_version', schema=None) as batch_op:
        batch_op.create_index('ix_account_login_options_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_account_login_options_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_account_login_options_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('users_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('keycloak_guid', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_terms_of_use_accepted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('terms_of_use_accepted_version', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idp_userid', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('login_source', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('login_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='user_version_pkey')
    )
    with op.batch_alter_table('users_version', schema=None) as batch_op:
        batch_op.create_index('ix_users_version_username', ['username'], unique=False)
        batch_op.create_index('ix_users_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_users_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_users_version_last_name', ['last_name'], unique=False)
        batch_op.create_index('ix_users_version_idp_userid', ['idp_userid'], unique=False)
        batch_op.create_index('ix_users_version_first_name', ['first_name'], unique=False)
        batch_op.create_index('ix_users_version_end_transaction_id', ['end_transaction_id'], unique=False)
        batch_op.create_index('ix_users_version_email', ['email'], unique=False)

    op.create_table('memberships_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('membership_type_code', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='membership_version_pkey')
    )
    with op.batch_alter_table('memberships_version', schema=None) as batch_op:
        batch_op.create_index('ix_memberships_version_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_memberships_version_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_memberships_version_status', ['status'], unique=False)
        batch_op.create_index('ix_memberships_version_org_id', ['org_id'], unique=False)
        batch_op.create_index('ix_memberships_version_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_memberships_version_end_transaction_id', ['end_transaction_id'], unique=False)

    op.create_table('activity',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('verb', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('object_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('object_tx_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('target_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('target_tx_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='activity_pkey')
    )
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.create_index('ix_activity_transaction_id', ['transaction_id'], unique=False)

    with op.batch_alter_table('contact_links_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contact_links_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_contact_links_history_org_id'))
        batch_op.drop_index(batch_op.f('ix_contact_links_history_entity_id'))
        batch_op.drop_index(batch_op.f('ix_contact_links_history_contact_id'))

    op.drop_table('contact_links_history')
    with op.batch_alter_table('product_subscriptions_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_subscriptions_history_org_id'))

    op.drop_table('product_subscriptions_history')
    op.drop_table('org_settings_history')
    with op.batch_alter_table('memberships_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_memberships_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_memberships_history_status'))
        batch_op.drop_index(batch_op.f('ix_memberships_history_org_id'))

    op.drop_table('memberships_history')
    with op.batch_alter_table('contacts_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contacts_history_street'))

    op.drop_table('contacts_history')
    with op.batch_alter_table('affiliations_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_affiliations_history_environment'))
        batch_op.drop_index(batch_op.f('ix_affiliations_history_entity_id'))

    op.drop_table('affiliations_history')
    op.drop_table('account_login_options_history')
    with op.batch_alter_table('orgs_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orgs_history_name'))
        batch_op.drop_index(batch_op.f('ix_orgs_history_access_type'))

    op.drop_table('orgs_history')
    with op.batch_alter_table('affidavits_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_affidavits_history_document_id'))

    op.drop_table('affidavits_history')
    # ### end Alembic commands ###
