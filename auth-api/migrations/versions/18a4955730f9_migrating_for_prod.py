"""migrating for prod

Revision ID: 18a4955730f9
Revises: 06c7acc047fa
Create Date: 2020-10-22 17:05:30.367190

"""
from typing import List, Dict

import sqlalchemy as sa
from alembic import op
from flask import current_app

from auth_api.models import AccountPaymentSettingsDeprecated, Org
from auth_api.services.rest_service import RestService
from auth_api.utils.enums import OrgType, PaymentMethod


# revision identifiers, used by Alembic.
revision = '18a4955730f9'
down_revision = '06c7acc047fa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    conn = op.get_bind()
    org_res = conn.execute(f"select * from org o where status_code = 'ACTIVE';")
    org_list: List[Org] = org_res.fetchall()

    token = RestService.get_service_account_token()

    acc_res = conn.execute(
        f"select * from account_payment_settings where is_active;")
    account_payment_list: List[AccountPaymentSettingsDeprecated] = acc_res.fetchall()
    account_payment_dict: Dict[int, AccountPaymentSettingsDeprecated] = {account_payment.org_id: account_payment for
                                                                         account_payment in account_payment_list}

    pay_url = current_app.config.get('PAY_API_URL')
    default_type = PaymentMethod.DIRECT_PAY.value if current_app.config.get(
        'DIRECT_PAY_ENABLED') else PaymentMethod.CREDIT_CARD.value

    for org in org_list:
        # invoke pay-api for each org
        account_payment_detail = account_payment_dict.get(org.id)
        pay_request = {
            'accountId': org.id,
            'accountName': org.name,
            'paymentInfo': {
                'methodOfPayment': getattr(account_payment_detail, 'preferred_payment_code', default_type),
                'billable': org.billable
            }
        }
        if is_premium := org.type_code == OrgType.PREMIUM.value:
            bcol_account_number = getattr(account_payment_detail, 'bcol_account_id', '')
            bcol_user_id = getattr(account_payment_detail, 'bcol_user_id', '')
            pay_request['bcolAccountNumber'] = bcol_account_number
            pay_request['bcolUserId'] = bcol_user_id

        accounts_url = f'{pay_url}/accounts/{org.id}'
        RestService.put(endpoint=accounts_url,
                        data=pay_request, token=token, raise_for_status=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('org_version', 'bcol_user_id')
    op.drop_column('org_version', 'bcol_account_id')
    op.drop_column('org', 'bcol_user_id')
    op.drop_column('org', 'bcol_account_id')
    # ### end Alembic commands ###

