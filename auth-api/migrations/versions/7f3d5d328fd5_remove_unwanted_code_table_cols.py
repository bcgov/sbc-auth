"""remove_unwanted_code_table_cols

Revision ID: 7f3d5d328fd5
Revises: 08e1d49dfa1a
Create Date: 2021-06-08 13:07:35.862184

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7f3d5d328fd5'
down_revision = '08e1d49dfa1a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('affidavit_status_created_by_id_fkey', 'affidavit_statuses', type_='foreignkey')
    op.drop_constraint('affidavit_status_modified_by_id_fkey', 'affidavit_statuses', type_='foreignkey')
    op.drop_column('affidavit_statuses', 'modified')
    op.drop_column('affidavit_statuses', 'created_by_id')
    op.drop_column('affidavit_statuses', 'created')
    op.drop_column('affidavit_statuses', 'modified_by_id')
    op.alter_column('business_size_codes', 'default',
                    existing_type=sa.BOOLEAN(),
                    nullable=False)
    op.alter_column('business_type_codes', 'default',
                    existing_type=sa.BOOLEAN(),
                    nullable=False)
    op.drop_constraint('corp_type_created_by_id_fkey', 'corp_types', type_='foreignkey')
    op.drop_constraint('corp_type_modified_by_id_fkey', 'corp_types', type_='foreignkey')
    op.drop_column('corp_types', 'modified')
    op.drop_column('corp_types', 'created_by_id')
    op.drop_column('corp_types', 'created')
    op.drop_column('corp_types', 'modified_by_id')
    op.drop_constraint('invitation_status_modified_by_id_fkey', 'invitation_statuses', type_='foreignkey')
    op.drop_constraint('invitation_status_created_by_id_fkey', 'invitation_statuses', type_='foreignkey')
    op.drop_column('invitation_statuses', 'modified')
    op.drop_column('invitation_statuses', 'created_by_id')
    op.drop_column('invitation_statuses', 'created')
    op.drop_column('invitation_statuses', 'modified_by_id')
    op.drop_constraint('invitation_type_modified_by_id_fkey', 'invitation_types', type_='foreignkey')
    op.drop_constraint('invitation_type_created_by_id_fkey', 'invitation_types', type_='foreignkey')
    op.drop_column('invitation_types', 'modified')
    op.drop_column('invitation_types', 'created_by_id')
    op.drop_column('invitation_types', 'created')
    op.drop_column('invitation_types', 'modified_by_id')
    op.drop_constraint('membership_type_created_by_id_fkey', 'membership_types', type_='foreignkey')
    op.drop_constraint('membership_type_modified_by_id_fkey', 'membership_types', type_='foreignkey')
    op.drop_column('membership_types', 'modified')
    op.drop_column('membership_types', 'created_by_id')
    op.drop_column('membership_types', 'created')
    op.drop_column('membership_types', 'modified_by_id')
    op.drop_constraint('org_status_modified_by_id_fkey', 'org_statuses', type_='foreignkey')
    op.drop_constraint('org_status_created_by_id_fkey', 'org_statuses', type_='foreignkey')
    op.drop_column('org_statuses', 'modified')
    op.drop_column('org_statuses', 'created_by_id')
    op.drop_column('org_statuses', 'created')
    op.drop_column('org_statuses', 'modified_by_id')
    op.drop_constraint('org_type_created_by_id_fkey', 'org_types', type_='foreignkey')
    op.drop_constraint('org_type_modified_by_id_fkey', 'org_types', type_='foreignkey')
    op.drop_column('org_types', 'modified')
    op.drop_column('org_types', 'created_by_id')
    op.drop_column('org_types', 'created')
    op.drop_column('org_types', 'modified_by_id')
    op.drop_constraint('payment_type_created_by_id_fkey', 'payment_types', type_='foreignkey')
    op.drop_constraint('payment_type_modified_by_id_fkey', 'payment_types', type_='foreignkey')
    op.drop_column('payment_types', 'modified')
    op.drop_column('payment_types', 'created_by_id')
    op.drop_column('payment_types', 'created')
    op.drop_column('payment_types', 'modified_by_id')
    op.drop_constraint('product_code_created_by_id_fkey', 'product_codes', type_='foreignkey')
    op.drop_constraint('product_code_modified_by_id_fkey', 'product_codes', type_='foreignkey')
    op.drop_column('product_codes', 'modified')
    op.drop_column('product_codes', 'created_by_id')
    op.drop_column('product_codes', 'created')
    op.drop_column('product_codes', 'modified_by_id')
    op.drop_constraint('product_subscriptions_statuses_created_by_id_fkey', 'product_subscriptions_statuses',
                       type_='foreignkey')
    op.drop_constraint('product_subscriptions_statuses_modified_by_id_fkey', 'product_subscriptions_statuses',
                       type_='foreignkey')
    op.drop_column('product_subscriptions_statuses', 'modified')
    op.drop_column('product_subscriptions_statuses', 'created_by_id')
    op.drop_column('product_subscriptions_statuses', 'created')
    op.drop_column('product_subscriptions_statuses', 'modified_by_id')
    op.drop_constraint('product_type_code_modified_by_id_fkey', 'product_type_codes', type_='foreignkey')
    op.drop_constraint('product_type_code_created_by_id_fkey', 'product_type_codes', type_='foreignkey')
    op.drop_column('product_type_codes', 'modified')
    op.drop_column('product_type_codes', 'created_by_id')
    op.drop_column('product_type_codes', 'created')
    op.drop_column('product_type_codes', 'modified_by_id')
    op.drop_constraint('suspension_reason_codes_created_by_id_fkey', 'suspension_reason_codes', type_='foreignkey')
    op.drop_constraint('suspension_reason_codes_modified_by_id_fkey', 'suspension_reason_codes', type_='foreignkey')
    op.drop_column('suspension_reason_codes', 'modified')
    op.drop_column('suspension_reason_codes', 'created_by_id')
    op.drop_column('suspension_reason_codes', 'created')
    op.drop_column('suspension_reason_codes', 'modified_by_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('suspension_reason_codes',
                  sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('suspension_reason_codes',
                  sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('suspension_reason_codes',
                  sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('suspension_reason_codes',
                  sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('suspension_reason_codes_modified_by_id_fkey', 'suspension_reason_codes', 'users',
                          ['modified_by_id'], ['id'])
    op.create_foreign_key('suspension_reason_codes_created_by_id_fkey', 'suspension_reason_codes', 'users',
                          ['created_by_id'], ['id'])
    op.add_column('product_type_codes', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_type_codes',
                  sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('product_type_codes', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_type_codes',
                  sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('product_type_code_created_by_id_fkey', 'product_type_codes', 'users', ['created_by_id'],
                          ['id'])
    op.create_foreign_key('product_type_code_modified_by_id_fkey', 'product_type_codes', 'users', ['modified_by_id'],
                          ['id'])
    op.add_column('product_subscriptions_statuses',
                  sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_subscriptions_statuses',
                  sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('product_subscriptions_statuses',
                  sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_subscriptions_statuses',
                  sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('product_subscriptions_statuses_modified_by_id_fkey', 'product_subscriptions_statuses',
                          'users', ['modified_by_id'], ['id'])
    op.create_foreign_key('product_subscriptions_statuses_created_by_id_fkey', 'product_subscriptions_statuses',
                          'users', ['created_by_id'], ['id'])
    op.add_column('product_codes', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_codes', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('product_codes', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product_codes', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('product_code_modified_by_id_fkey', 'product_codes', 'users', ['modified_by_id'], ['id'])
    op.create_foreign_key('product_code_created_by_id_fkey', 'product_codes', 'users', ['created_by_id'], ['id'])
    op.add_column('payment_types', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('payment_types', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('payment_types', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('payment_types', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('payment_type_modified_by_id_fkey', 'payment_types', 'users', ['modified_by_id'], ['id'])
    op.create_foreign_key('payment_type_created_by_id_fkey', 'payment_types', 'users', ['created_by_id'], ['id'])
    op.add_column('org_types', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org_types', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('org_types', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org_types', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('org_type_modified_by_id_fkey', 'org_types', 'users', ['modified_by_id'], ['id'])
    op.create_foreign_key('org_type_created_by_id_fkey', 'org_types', 'users', ['created_by_id'], ['id'])
    op.add_column('org_statuses', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org_statuses', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('org_statuses', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('org_statuses', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('org_status_created_by_id_fkey', 'org_statuses', 'users', ['created_by_id'], ['id'])
    op.create_foreign_key('org_status_modified_by_id_fkey', 'org_statuses', 'users', ['modified_by_id'], ['id'])
    op.add_column('membership_types', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('membership_types', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('membership_types', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('membership_types', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('membership_type_modified_by_id_fkey', 'membership_types', 'users', ['modified_by_id'],
                          ['id'])
    op.create_foreign_key('membership_type_created_by_id_fkey', 'membership_types', 'users', ['created_by_id'], ['id'])
    op.add_column('invitation_types', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('invitation_types', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('invitation_types', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('invitation_types', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('invitation_type_created_by_id_fkey', 'invitation_types', 'users', ['created_by_id'], ['id'])
    op.create_foreign_key('invitation_type_modified_by_id_fkey', 'invitation_types', 'users', ['modified_by_id'],
                          ['id'])
    op.add_column('invitation_statuses', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('invitation_statuses',
                  sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('invitation_statuses', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('invitation_statuses',
                  sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('invitation_status_created_by_id_fkey', 'invitation_statuses', 'users', ['created_by_id'],
                          ['id'])
    op.create_foreign_key('invitation_status_modified_by_id_fkey', 'invitation_statuses', 'users', ['modified_by_id'],
                          ['id'])
    op.add_column('corp_types', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('corp_types', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('corp_types', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('corp_types', sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('corp_type_modified_by_id_fkey', 'corp_types', 'users', ['modified_by_id'], ['id'])
    op.create_foreign_key('corp_type_created_by_id_fkey', 'corp_types', 'users', ['created_by_id'], ['id'])
    op.alter_column('business_type_codes', 'default',
                    existing_type=sa.BOOLEAN(),
                    nullable=True)
    op.alter_column('business_size_codes', 'default',
                    existing_type=sa.BOOLEAN(),
                    nullable=True)
    op.add_column('affidavit_statuses', sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('affidavit_statuses',
                  sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('affidavit_statuses', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('affidavit_statuses',
                  sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('affidavit_status_modified_by_id_fkey', 'affidavit_statuses', 'users', ['modified_by_id'],
                          ['id'])
    op.create_foreign_key('affidavit_status_created_by_id_fkey', 'affidavit_statuses', 'users', ['created_by_id'],
                          ['id'])
    # ### end Alembic commands ###
