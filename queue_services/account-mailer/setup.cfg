[metadata]
name = account_mailer
url = https://github.com/bcgov/sbc-pay/queue_services/account-mailer
author = SBC Relationships team
author_email =
classifiers =
    Development Status :: Beta
    Intended Audience :: Developers / QA
    Topic :: Payments
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Programming Language :: Python :: 3.8
license = Apache Software License Version 2.0
description = A short description of the project
long_description = file: README.md
keywords =

[options]
zip_safe = True
python_requires = >=3.6
include_package_data = True
packages = find:

[options.package_data]
account_mailer =

[wheel]
universal = 1

[bdist_wheel]
universal = 1

[aliases]
test = pytest

[flake8]
exclude = .git,*migrations*
max-line-length = 120
docstring-min-length=10
per-file-ignores =
    */__init__.py:F401

[pycodestyle]
max_line_length = 120
ignore = E501
docstring-min-length=10
notes=FIXME,XXX # TODO is ignored
match_dir = src/account_mailer
ignored-modules=flask_sqlalchemy
    sqlalchemy
per-file-ignores =
    */__init__.py:F401
good-names=
    b,
    d,
    i,
    e,
    f,
    k,
    u,
    v,
    ar,
    cb, #common shorthand for callback
    nc,
    rv,
    sc,
    event_loop,
    logger,
    loop,

[pylint]
ignore=migrations,test
max_line_length=120
notes=FIXME,XXX,TODO
ignored-modules=flask_sqlalchemy,sqlalchemy,SQLAlchemy,alembic,scoped_session
ignored-classes=scoped_session
disable=C0301,W0511,R0801,R0902

[isort]
line_length = 120
indent = 4
multi_line_output = 4
lines_after_imports = 2

[tool:pytest]
minversion = 2.0
testpaths = tests
addopts = --verbose
    --strict
    -p no:warnings
python_files = tests/*/test*.py
norecursedirs = .git .tox venv* requirements* build
log_cli = true
log_cli_level = 1
filterwarnings =
    ignore::UserWarning
markers =
    slow
    serial

[coverage:run]
branch = True
source =
    src/account_mailer
omit = 
    src/account_mailer/wsgi.py
    src/account_mailer/gunicorn_config.py

[report:run]
exclude_lines =
    pragma: no cover
    from
    import
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
