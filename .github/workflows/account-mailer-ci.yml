name: Account Mailer Queue CI

on:
  pull_request:
    branches:
      - main
    paths:
      - "queue_services/account-mailer/**"
      - "auth-api/src/auth_api/models/**"
      - "auth-api/src/auth_api/services/gcp_queue/*"
      - "auth-api/src/auth_api/utils/account_mailer.py"
      - "auth-api/src/auth_api/utils/enums.py"

defaults:
  run:
    shell: bash
    working-directory: ./queue_services/account-mailer

jobs:
  setup-job:
    runs-on: ubuntu-20.04

    if: github.repository == 'bcgov/sbc-auth'

    steps:
      - uses: actions/checkout@v4
      - run: "true"

  linting:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Lint with pylint
        id: pylint
        run: |
          make pylint
      - name: Lint with flake8
        id: flake8
        run: |
          make flake8

  testing:
    needs: setup-job
    env:
      DATABASE_TEST_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
      USE_TEST_KEYCLOAK_DOCKER: "YES"
      USE_DOCKER_MOCK: "YES"
      JWT_OIDC_ISSUER: "http://localhost:8081/auth/realms/demo"
      SBC_AUTH_ADMIN_CLIENT_ID: "sbc-auth-admin"
      SBC_AUTH_ADMIN_CLIENT_SECRET: "2222222222"
      MINIO_ENDPOINT: "localhost:9000"
      MINIO_ACCESS_KEY: "minio"
      MINIO_ACCESS_SECRET: "minio123"
      MINIO_BUCKET_NAME: "payment-sftp"
      MINIO_SECURE: False
      BCOL_ADMIN_EMAIL: "test@test.com"

    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install docker-compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version
      - name: Install dependencies
        run: |
          make setup
      - name: Test with pytest
        id: test
        run: |
          make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./queue_services/account-mailer/coverage.xml
          flags: accountmailerqueue
          name: codecov-account-mailer
          fail_ci_if_error: false

  build-check:
    needs: setup-job
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - name: build to check strictness
        id: build
        run: |
          make build-nc
