name: status API TEST CD

on:
  push:
    branches:
      - master
    paths:
      - "status-api/**"

env:
  IMAGE_NAME: status-api
  TAG_NAME: test

jobs:
  status-api-test:
    runs-on: ubuntu-latest
    if: github.repository == 'bcgov/sbc-auth'
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Install tools
        run: |
          ./scripts/install_tools.sh
          oc version
          op --versio
      - name: Log into registry
        run: echo "${{ secrets.OPENSHIFT_TOKEN }}" | docker login ${{ secrets.OPENSHIFT_REGISTRY }} -u ${{ secrets.OPENSHIFT_SA_NAME}} --password-stdin
      - name: Pull image
        working-directory: ./status-api
        run: docker pull ${{ secrets.OPENSHIFT_REGISTRY }}/d7eovc-tools/python:3.7
      - name: Build image
        uses: vrutkovs/action-s2i@master
        with:
          path: ./status-api
          base: ${{ secrets.OPENSHIFT_REGISTRY }}/d7eovc-tools/python:3.7
          image: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.OPENSHIFT_REPOSITORY }}/${{env.IMAGE_NAME}}
      - name: Push image
        working-directory: ./status-api
        run: |
          dIMAGE_ID=${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.OPENSHIFT_REPOSITORY }}/$IMAGE_NAME
          docker tag image $IMAGE_ID:$TAG_NAME
          docker push $IMAGE_ID:$TAG_NAME
      - name: Login Openshift
        working-directory: ./status-api
        run: |
          oc ${{ secrets.oc_parameters }}
          oc project ${{ secrets.OPENSHIFT_REPOSITORY_DEV }}
      - name: Set Deployment Environement Variables
        working-directory: .
        run: |
          vaults='[{ "vault": "shared", "application": ["jwt"]}, {"vault": "relationship","application": ["status-api", "sentry"]}]'
          ./scripts/1pass_secret.sh ${{ secrets.op_parameters }} -e "${TAG_NAME}" -v "${vaults}" -a "${IMAGE_NAME}-${TAG_NAME}"
      - name: Rollout new deployment
        working-directory: ./status-api
        run: |
          oc rollout latest dc/$IMAGE_NAME-${TAG_NAME}
          oc rollout status dc/$IMAGE_NAME-${TAG_NAME} -w
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*Status API Build and Deploy to ${{env.TAG_NAME}}*"
          channel: "#relationship-developers"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
