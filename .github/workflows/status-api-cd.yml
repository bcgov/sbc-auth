name: Status API CD

on:
  push:
    branches:
      - development
      - master
    paths:
      - "status-api/**"
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: "Environment (dev/test)"
        required: true
        default: "dev"

env:
  IMAGE_NAME: status-api

jobs:
  status-api-cd:
    runs-on: ubuntu-latest
    if: github.repository == 'bcgov/sbc-auth'
    steps:
      - uses: actions/checkout@v2
      - name: Set env by input
        run: |
          echo "::set-env name=TAG_NAME::${{ github.event.inputs.environement }}"

      - name: Set env by master branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/master'
        run: |
          echo "::set-env name=TAG_NAME::test"

      - name: Set env by development branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/development'
        run: |
          echo "::set-env name=TAG_NAME::dev"

      - name: Install tools
        run: |
          ./scripts/install_tools.sh
          oc version
          op --version

      - name: Login Openshift
        run: |
          oc login ${{ secrets.OPENSHIFT_LOGIN_REGISTRY }} --token=${{ secrets.OPENSHIFT_SA_TOKEN }}

      - name: Set Deployment Environement Variables
        working-directory: .
        run: |
          vaults='[{ "vault": "shared", "application": ["jwt"]}, {"vault": "relationship","application": ["status-api", "sentry"]}]'
          ./scripts/1pass.sh ${{ secrets.op_parameters }} -m "secret" -e "${TAG_NAME}" -v "${vaults}" -a "${IMAGE_NAME}-${TAG_NAME}" -n "${{ secrets.OPENSHIFT_REPOSITORY}}_${TAG_NAME}"

      - name: Log into registry
        run: echo "${{ secrets.OPENSHIFT_SA_TOKEN }}" | docker login ${{ secrets.OPENSHIFT_DOCKER_REGISTRY }} -u ${{ secrets.OPENSHIFT_SA_NAME}} --password-stdin

      - name: Build image
        working-directory: ./status-api
        run: |
          docker build . --file Dockerfile --tag image

      - name: Push image
        working-directory: ./status-api
        run: |
          IMAGE_ID=${{ secrets.OPENSHIFT_DOCKER_REGISTRY }}/"${{ secrets.OPENSHIFT_REPOSITORY}}_tools"/$IMAGE_NAME
          docker tag image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
          docker image tag $IMAGE_ID:latest $IMAGE_ID:$TAG_NAME
          docker push $IMAGE_ID:$TAG_NAME

      - name: Rollout new deployment
        working-directory: ./status-api
        run: |
          oc rollout status dc/$IMAGE_NAME-${TAG_NAME} -n "${{ secrets.OPENSHIFT_REPOSITORY}}_${TAG_NAME}" -w

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Status API Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
