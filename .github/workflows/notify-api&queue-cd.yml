name: Notify API & Queue CD

on:
  push:
    branches:
      - development
      - master
    paths:
      - "notify-api/**"
      - "queue_services/notify-queue/**"
  workflow_dispatch:
    inputs:
      environement:
        description: "Environment (dev/test)"
        required: true
        default: "dev"

jobs:
  notify-api-cd:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: notify-api

    if: github.repository == 'bcgov/sbc-auth'
    steps:
      - uses: actions/checkout@v2
      - name: Set env by input
        run: |
          echo "::set-env name=TAG_NAME::${{ github.event.inputs.environement }}"

      - name: Set env by master branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/master'
        run: |
          echo "::set-env name=TAG_NAME::test"

      - name: Set env by development branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/development'
        run: |
          echo "::set-env name=TAG_NAME::dev"

      - uses: pwei1018/bcrs-cd-action@latest
        with:
          WORKING_DIRECTORY: "./notify-api"
          APP_NAME: "notify-api"
          VAULTS: '[{ \"vault\": \"shared\", \"application\": [\"jwt\", \"email\", \"nats\"]}, {\"vault\": \"relationship\",\"application\": [\"postgres-notify\", \"notify-api\", \"sentry\"]}]'
          SKIP_OP: "false"
          OP_PARAMETERS: ${{ secrets.OP_PARAMETERS }}
          OPENSHIFT_LOGIN_REGISTRY: ${{ secrets.OPENSHIFT_LOGIN_REGISTRY }}
          OPENSHIFT_DOCKER_REGISTRY: ${{ secrets.OPENSHIFT_DOCKER_REGISTRY }}
          OPENSHIFT_SA_NAME: ${{ secrets.OPENSHIFT_SA_NAME }}
          OPENSHIFT_SA_TOKEN: ${{ secrets.OPENSHIFT_SA_TOKEN }}
          OPENSHIFT_REPOSITORY: ${{ secrets.OPENSHIFT_REPOSITORY }}
          OPENSHIFT_REPOSITORY_DEPLOYMENT: ${{ secrets.OPENSHIFT_REPOSITORY }}

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Notify API Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}

  notify-queue-cd:
    needs: notify-api-cd
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: notify-queue

    if: github.repository == 'bcgov/sbc-auth'
    steps:
      - uses: actions/checkout@v2
      - name: Set env by input
        run: |
          echo "::set-env name=TAG_NAME::${{ github.event.inputs.environement }}"

      - name: Set env by master branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/master'
        run: |
          echo "::set-env name=TAG_NAME::test"

      - name: Set env by development branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/development'
        run: |
          echo "::set-env name=TAG_NAME::dev"

      - uses: pwei1018/bcrs-cd-action@latest
        with:
          WORKING_DIRECTORY: "./queue_services/notify-queue"
          APP_NAME: "notify-queue"
          VAULTS: '[{ \"vault\": \"shared\", \"application\": [\"email\", \"nats\"]}, {\"vault\": \"relationship\",\"application\": [\"postgres-notify\", \"notify-api\", \"notify-queue\"]}]'
          SKIP_OP: "false"
          OP_PARAMETERS: ${{ secrets.OP_PARAMETERS }}
          OPENSHIFT_LOGIN_REGISTRY: ${{ secrets.OPENSHIFT_LOGIN_REGISTRY }}
          OPENSHIFT_DOCKER_REGISTRY: ${{ secrets.OPENSHIFT_DOCKER_REGISTRY }}
          OPENSHIFT_SA_NAME: ${{ secrets.OPENSHIFT_SA_NAME }}
          OPENSHIFT_SA_TOKEN: ${{ secrets.OPENSHIFT_SA_TOKEN }}
          OPENSHIFT_REPOSITORY: ${{ secrets.OPENSHIFT_REPOSITORY }}
          OPENSHIFT_REPOSITORY_DEPLOYMENT: ${{ secrets.OPENSHIFT_REPOSITORY }}

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Notify Queue Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
