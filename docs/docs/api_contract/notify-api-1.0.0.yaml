openapi: 3.0.0
info:
  title: Notify API Reference
  description: BC Registries Notify API reference documentation
  version: 1.0.0
  contact:
    name: BC Registries
  license:
    name: Apache 2.0
paths:
  /api/v1/notify/:
    post:
      tags:
        - Notification
      summary: Receive Notification
      description: Send Notification
      operationId: Send_Notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
            examples:
              notify_post_1:
                value:
                  recipients: test@abc.com
                  content:
                    subject: test notify
                    body: hello world!
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
              examples:
                notify_post_1:
                  value:
                    id: 1
                    recipients: string
                    requestDate: '2019-09-25T09:08:57.515479+00:00'
                    sentDate: '2019-09-26T09:34:34.792527+00:00'
                    notifyType:
                      code: EMAIL
                      desc: The Email type of notification
                    notifyStatus:
                      code: PENDING
                      desc: Status for the notification pending
                    content:
                      subject: test notify
                      body: hello world!
        '422':
          description: BadRequest
          content:
            application/json:
              schema:
                title: HTTPValidationError
                type: object
                x-examples:
                  example-1:
                    errors:
                      - body:
                          - string
                properties:
                  errors:
                    type: array
                    items:
                      type: object
              examples:
                example-1:
                  value:
                    errors:
                      - body:
                          - string
  '/api/v1/notify/{notification_id}':
    get:
      tags:
        - notify
      summary: Find Notification
      description: Get notification by id.
      operationId: find_notification_api_v1_notify__notification_id__get
      parameters:
        - required: true
          schema:
            title: Notification Id
            type: integer
          name: notification_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
              examples:
                notify_1:
                  value:
                    id: 1
                    recipients: string
                    requestBy: string
                    requestDate: '2019-09-25T09:08:57.515479+00:00'
                    sentDate: '2019-09-26T09:34:34.792527+00:00'
                    notifyType:
                      code: EMAIL
                      desc: The Email type of notification
                    notifyStatus:
                      code: DELIVERED
                      desc: Status for the notification sent successful
                    content:
                      subject: test notify
                      body: hello world!
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/v1/notify/notifications/{status}':
    get:
      tags:
        - Notification
      summary: Get Notifications by status
      description: Get Notification by status
      operationId: Get_Notifications_status
      parameters:
        - name: status
          in: path
          description: Notification status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Application-Context:
              schema:
                type: string
              description: X-Application-Context
              examples:
                notify_1:
                  value: '1'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Access-Control-Allow-Origin
              examples:
                notify_1:
                  value: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: Access-Control-Allow-Methods
              examples:
                notify_1:
                  value: 'GET, POST'
            Access-Control-Allow-Headers:
              schema:
                type: string
              description: Access-Control-Allow-Headers
              examples:
                notify_1:
                  value: 'Content-Type, api_key, Authorization'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponse'
              examples:
                notify_1:
                  value:
                    - id: 1
                      recipients: string
                      requestBy: string
                      requestDate: '2019-09-25T09:08:57.515479+00:00'
                      sentDate: '2019-09-26T09:34:34.792527+00:00'
                      notifyType:
                        code: EMAIL
                        desc: The Email type of notification
                      notifyStatus:
                        code: DELIVERED
                        desc: Status for the notification sent successful
                      content:
                        subject: test notify
                        body: hello world!
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Identifier representing the type of error that occurred.
                  message:
                    type: string
                    description: Description of the error.
                description: Contains details of an error that was encountered.
                x-examples:
                  example-1: {}
    parameters:
      - name: status
        in: path
        required: true
        schema:
          type: string
        examples:
          notify_1:
            value: DELIVERED
components:
  schemas:
    AttachmentRequest:
      title: AttachmentRequest
      type: object
      properties:
        fileName:
          title: Filename
          type: string
        fileBytes:
          title: Filebytes
          type: string
        fileUrl:
          title: Fileurl
          type: string
        attachOrder:
          title: Attachorder
          type: string
      description: This is the Entity Request model for the Notification attachment.
    AttachmentResponse:
      title: AttachmentResponse
      type: object
      properties:
        file_name:
          title: File Name
          type: string
        attach_order:
          title: Attach Order
          type: string
      description: This is the Entity Response model for the Notification attachment.
    ContentRequest:
      title: ContentRequest
      type: object
      properties:
        subject:
          title: Subject
          type: string
        body:
          title: Body
          type: string
        attachments:
          title: Attachments
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRequest'
      description: Entity Request model for the Notification content.
    ContentResponse:
      title: ContentResponse
      type: object
      properties:
        subject:
          title: Subject
          type: string
          default: ''
        body:
          title: Body
          type: string
          default: ''
        attachments:
          title: Attachments
          type: array
          items:
            $ref: '#/components/schemas/AttachmentResponse'
      description: This is the Entity Response model for the Notification content.
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    NotificationRequest:
      title: NotificationRequest
      type: object
      properties:
        recipients:
          title: Recipients
          type: string
        requestBy:
          title: Requestby
          type: string
        content:
          $ref: '#/components/schemas/ContentRequest'
      description: Notification model for resquest.
    NotificationResponse:
      title: NotificationResponse
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
        recipients:
          title: Recipients
          type: string
          default: ''
        requestDate:
          title: Requestdate
          type: string
          format: date-time
        sentDate:
          title: Sentdate
          type: string
          format: date-time
        notifyType:
          $ref: '#/components/schemas/NotificationType'
        notifyStatus:
          $ref: '#/components/schemas/NotificationStatus'
        content:
          $ref: '#/components/schemas/ContentResponse'
      description: Notification model for response.
    NotificationStatus:
      title: NotificationStatus
      type: object
      properties:
        code:
          title: Code
          type: string
          default: ''
        desc:
          title: Desc
          type: string
          default: ''
      description: This is pydantic model of notification status.
    NotificationType:
      title: NotificationType
      type: object
      properties:
        code:
          title: Code
          type: string
          default: ''
        desc:
          title: Desc
          type: string
          default: ''
      description: This is pydantic model of notification type.
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        body:
          title: Body
          type: array
          items:
            type: string
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
servers:
  - url: 'https://notify-api-dev.apps.silver.devops.gov.bc.ca/'
    description: Dev
  - url: 'https://notify-api-test.apps.silver.devops.gov.bc.ca/'
    description: Test
  - url: 'https://notify-api.apps.silver.devops.gov.bc.ca/'
    description: Prod
security:
  - JWT: []
