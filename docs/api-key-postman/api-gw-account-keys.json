{
	"info": {
		"_postman_id": "f6e5df62-3ee7-4472-a6ba-8f8fea0dbacd",
		"name": "api-gw-account-keys",
		"description": "version=1.0.0\n\nBelow are the environment variables needed to run this collection with example value from DEV environment; \n\nauth-api-base-url\t:\thttps://auth-api-test.pathfinder.gov.bc.ca\ntoken-url\t\t\t:\thttps://test.oidc.gov.bc.ca/auth/realms/fcf0kpqr/protocol/openid-connect/token\nservice-account-id\t:\tsbc-auth-admin\nservice-account-secret:\t<Secret>\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create API Keys",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ab09244-2ee0-4849-9ca0-ee39660b7dfe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"filing type code matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.filingTypeCode).to.eql('OTADR');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"keyName\": \"Dev Test Key\",\n\t\"environment\": \"dev\"\n}"
				},
				"url": {
					"raw": "{{auth-api-base-url}}/api/v1/orgs/{{account-id}}/api-keys",
					"host": [
						"{{auth-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"orgs",
						"{{account-id}}",
						"api-keys"
					]
				},
				"description": "Calculate fees by Corp Type and Filing type"
			},
			"response": []
		},
		{
			"name": "Get all API Keys",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ab09244-2ee0-4849-9ca0-ee39660b7dfe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"filing type code matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.filingTypeCode).to.eql('OTADR');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth-api-base-url}}/api/v1/orgs/{{account-id}}/api-keys",
					"host": [
						"{{auth-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"orgs",
						"{{account-id}}",
						"api-keys"
					]
				},
				"description": "Calculate fees by Corp Type and Filing type"
			},
			"response": []
		},
		{
			"name": "Revoke API Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ab09244-2ee0-4849-9ca0-ee39660b7dfe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"filing type code matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.filingTypeCode).to.eql('OTADR');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth-api-base-url}}/api/v1/orgs/{{account-id}}/api-keys/{{key}}",
					"host": [
						"{{auth-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"orgs",
						"{{account-id}}",
						"api-keys",
						"{{key}}"
					]
				},
				"description": "Calculate fees by Corp Type and Filing type"
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dca1bb4a-f917-43e2-ae5d-3cd3c52d1daf",
				"type": "text/javascript",
				"exec": [
					"function getvar(variableName) {",
					"    let value = pm.variables.get(variableName);",
					"    if (!value) throw new Error(",
					"        `Variable '${variableName}' is not defined.`);",
					"    return value;",
					"}",
					"",
					"let tokenUrl = getvar('token-url');",
					"let accountId = getvar('service-account-id');",
					"let accountSecret = getvar('service-account-secret');",
					"",
					"let getTokenRequest = {",
					"    method: 'POST',",
					"    url: tokenUrl,",
					"    header: {",
					"        'content-type': 'application/x-www-form-urlencoded',",
					"        'Authorization': 'Basic '+ btoa(accountId+':'+accountSecret)",
					"    },",
					" ",
					"    body: 'grant_type=client_credentials'",
					"    ",
					"};",
					"",
					"pm.sendRequest(getTokenRequest, (err, response) => {",
					"    let jsonResponse = response.json(),",
					"        newAccessToken = jsonResponse.access_token;",
					"",
					"    console.log({ err, jsonResponse, newAccessToken })",
					"",
					"    pm.environment.set('accessToken', newAccessToken);",
					"    pm.variables.set('accessToken', newAccessToken);",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c078047b-a96e-41ad-8b31-a89c2528dd8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}