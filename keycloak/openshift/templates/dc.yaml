kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: keycloak
  annotations:
    description: An example Keycloak server with HTTPS
    iconClass: icon-sso
    openshift.io/display-name: Keycloak
    tags: keycloak
    version: 12.0.2
objects:
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}-to-db
      labels:
        name: ${NAME}-${TAG}
        app: ${NAME}
    spec:
      description: |
        Allow the application's API to talk to the database.
      source:
        - - role=${ROLE}
          - app=${NAME}
          - $namespace=${NAMESPACE}-${TAG}
      destination:
        - - role=db
          - app=${DB_NAME}
          - $namespace=${NAMESPACE}-${TAG}

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        app: ${NAME}
        name: ${NAME}-${TAG}
      name: ${NAME}-${TAG}
    spec:
      ports:
        - name: ${NAME}-${TAG}-8080
          port: 8080
          targetPort: 8080
        - name: ${NAME}-${TAG}-8443
          port: 8443
          targetPort: 8443
      selector:
        name: ${NAME}-${TAG}

  - apiVersion: v1
    id: ${NAME}-${TAG}
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        app: ${NAME}
        name: ${NAME}-${TAG}
      name: ${NAME}-${TAG}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}-${TAG}-8080
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        name: ${NAME}-${TAG}

  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        app: ${NAME}
        name: ${NAME}-${TAG}
      name: ${NAME}-${TAG}-secret
    stringData:
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      DB_VENDOR: ${DB_VENDOR}
      DB_PORT: 5432
      DB_ADDR: ${DB_NAME}-${TAG}
    type: Opaque

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}
        name: ${NAME}-${TAG}
        role: keycloak
      name: ${NAME}-${TAG}
    spec:
      replicas: 1
      selector:
        name: ${NAME}-${TAG}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: ${NAME}
            name: ${NAME}-${TAG}
            role: keycloak
          name: ${NAME}-${TAG}
        spec:
          initContainers:
            - args:
                - '-c'
                - |
                  echo "Copying Auth theme..."
                  cp -R /auth-theme/* /theme
              command:
                - sh
              image: >-
                image-registry.openshift-image-registry.svc:5000/6e0e49-tools/auth-keycloak-theme:dev
              imagePullPolicy: Always
              name: theme-provider
              resources:
                limits:
                  cpu: 20m
                  memory: 64Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /theme
                  name: theme
          containers:
            - env:
                - name: KEYCLOAK_USER
                  valueFrom:
                    secretKeyRef:
                      key: KEYCLOAK_USER
                      name: ${NAME}-${TAG}-secret
                - name: KEYCLOAK_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: KEYCLOAK_PASSWORD
                      name: ${NAME}-${TAG}-secret
                - name: DB_VENDOR
                  valueFrom:
                    secretKeyRef:
                      key: DB_VENDOR
                      name: ${NAME}-${TAG}-secret
                - name: DB_PORT
                  valueFrom:
                    secretKeyRef:
                      key: DB_PORT
                      name: ${NAME}-${TAG}-secret
                - name: DB_ADDR
                  valueFrom:
                    secretKeyRef:
                      key: DB_ADDR
                      name: ${NAME}-${TAG}-secret
                - name: DB_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${DB_NAME}-${TAG}-secret
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${DB_NAME}-${TAG}-secret
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${DB_NAME}-${TAG}-secret
                - name: PROXY_ADDRESS_FORWARDING
                  value: 'true'
                - name: JGROUPS_DISCOVERY_PROTOCOL
                  value: dns.DNS_PING
                - name: JGROUPS_DISCOVERY_PROPERTIES
                  value: 'dns_query=${NAME}-${TAG}.${NAMESPACE}-${TAG}.svc.cluster.local'
              image: quay.io/keycloak/keycloak:12.0.2
              imagePullPolicy: IfNotPresent
              initialDelaySeconds: 60
              name: ${NAME}-${TAG}
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8443
                  name: https
                  protocol: TCP
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  path: /auth/realms/master
                  port: 8080
                  scheme: HTTP
              initialDelaySeconds: 30
              securityContext:
              privileged: false
              volumeMounts:
                - mountPath: /opt/jboss/keycloak/themes/auth-theme
                  name: theme
          volumes:
            - emptyDir: {}
              name: theme
      triggers:
        - type: ConfigChange
parameters:
  - name: NAME
    displayName: Application Name
    description: The name for the application.
    value: auth-keycloak
    required: true

  - name: TAG
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev

  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: keycloak

  - name: KEYCLOAK_USER
    displayName: Keycloak Administrator Username
    description: Keycloak Server administrator username
    required: true
    value: admin

  - name: KEYCLOAK_PASSWORD
    displayName: Keycloak Administrator Password
    description: Keycloak Server administrator password
    generate: expression
    from: '[a-zA-Z0-9]{8}'
    required: true

  - name: DB_VENDOR
    displayName: DB Vendor
    description: 'DB vendor (H2, POSTGRES, MYSQL or MARIADB)'
    value: POSTGRES
    required: true

  - name: DB_NAME
    displayName: Database Service Name
    description: The name of the database server/service.
    required: true
    value: postgresql-keycloak

  - name: APPLICATION_DOMAIN
    displayName: Application Domain
    description: The endpoint used for routing access to the application.
    value: auth-keycloak-dev.apps.silver.devops.gov.bc.ca

  - name: NAMESPACE
    displayName: Namespace used for DNS discovery
    description: >-
      This namespace is a part of DNS query sent to Kubernetes API. This query
      allows the DNS_PING protocol to extract cluster members. This parameter
      might be removed once https://issues.jboss.org/browse/JGRP-2292 is
      implemented.
    required: true
    value: 6e0e49
