{
  "roles": {
    "realm": [
      {
        "name": "staff_admin",
        "description": "Staff Admin Role",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "NR",
        "description": "Names Request Corp Type",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "view",
        "description": "Role for view access",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "job",
        "description": "Generic role for all jobs",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "public_user",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "anonymous_user",
        "description": "role for anonymous users",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "TMP",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "tester",
        "description": "It is for test endpoint in auth api.",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "system",
        "description": "System User Role",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "CP",
        "description": "role for service accounts which are related to cooperatives which gives them permission to fetch related entities",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "edit",
        "description": "Role for edit access",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "colin",
        "description": "Role for colin jobs",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "bcol_staff_admin",
        "description": "Role for bcol admin users",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "staff",
        "description": "Role to specify the user type for staff users",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      },
      {
        "name": "account_holder",
        "description": "Role to confirm the user has setup their account in auth system",
        "composite": false,
        "clientRole": false,
        "containerId": "fcf0kpqr",
        "attributes": {}
      }
    ]
  },
  "groups": [
    {
      "name": "account_holders",
      "path": "/account_holders",
      "attributes": {},
      "realmRoles": [
        "account_holder"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "name": "anonymous_users",
      "path": "/anonymous_users",
      "attributes": {},
      "realmRoles": [
        "anonymous_user",
        "edit"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "name": "job",
      "path": "/job",
      "attributes": {},
      "realmRoles": [
        "job"
      ],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "colin",
          "path": "/job/colin",
          "attributes": {},
          "realmRoles": [
            "colin",
            "system"
          ],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    },
    {
      "name": "public_users",
      "path": "/public_users",
      "attributes": {},
      "realmRoles": [
        "public_user",
        "edit"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "name": "staff",
      "path": "/staff",
      "attributes": {},
      "realmRoles": [
        "staff"
      ],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "editor",
          "path": "/staff/editor",
          "attributes": {},
          "realmRoles": [
            "edit"
          ],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "name": "viewer",
          "path": "/staff/viewer",
          "attributes": {},
          "realmRoles": [
            "view"
          ],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "name": "admin",
          "path": "/staff/admin",
          "attributes": {},
          "realmRoles": [
            "uma_authorization",
            "staff_admin",
            "staff",
            "view",
            "cc_authorized",
            "edit",
            "bcol_authorized"
          ],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "name": "bcol_admin",
          "path": "/staff/bcol_admin",
          "attributes": {},
          "realmRoles": [
            "bcol_staff_admin",
            "edit"
          ],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    }
  ],
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator",
    "Microsoft Authenticator"
  ],
  "clients": [
    {
      "clientId": "sbc-auth-web",
      "rootUrl": "https://coops-dev.pathfinder.gov.bc.ca/*",
      "adminUrl": "/",
      "baseUrl": "/*",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "Source Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "source",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "loginSource",
            "jsonType.label": "String"
          }
        },
        {
          "name": "aud-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "sbc-auth-web",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "idp_userid",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "false",
            "user.attribute": "idp_userid",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "idp_userid",
            "jsonType.label": "String"
          }
        },
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "preferred_username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "firstname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "lastname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "access_type",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "false",
            "user.attribute": "access_type",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "accessType",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "displayName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    }
  ],
  "identityProviders": [
    {
      "alias": "idir",
      "displayName": "IDIR",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login"
    },
    {
      "alias": "bcsc",
      "displayName": "BC Services Card",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "BCSC first broker login"
    },
    {
      "alias": "bcros",
      "displayName": "BC Registries Login",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "BCSC first broker login"
    },
    {
      "alias": "bceid",
      "displayName": "BCeID",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "postBrokerLoginFlowAlias": "OTP browser"
    }
  ],
  "identityProviderMappers": [
    {
      "name": "firstName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "firstName",
        "user.attribute": "firstName"
      }
    },
    {
      "name": "access_type",
      "identityProviderAlias": "bcros",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "access_type",
        "user.attribute": "access_type"
      }
    },
    {
      "name": "displayName",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "displayName",
        "user.attribute": "displayName"
      }
    },
    {
      "name": "idir_userid",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "idir_userid",
        "user.attribute": "idp_userid"
      }
    },
    {
      "name": "displayName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "displayName",
        "user.attribute": "displayName"
      }
    },
    {
      "name": "bceid_userid",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "bceid_userid",
        "user.attribute": "idp_userid"
      }
    },
    {
      "name": "loginSource",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "BCEID",
        "attribute": "source"
      }
    },
    {
      "name": "email",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "email",
        "user.attribute": "email"
      }
    },
    {
      "name": "loginSource",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "BCSC",
        "attribute": "source"
      }
    },
    {
      "name": "username",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${CLAIM.preferred_username}@${ALIAS}"
      }
    },
    {
      "name": "loginSource",
      "identityProviderAlias": "github",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "IDIR",
        "attribute": "source"
      }
    },
    {
      "name": "username",
      "identityProviderAlias": "bcros",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}/${CLAIM.preferred_username}"
      }
    },
    {
      "name": "username",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${CLAIM.preferred_username}@${ALIAS}"
      }
    },
    {
      "name": "email",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "email",
        "user.attribute": "email"
      }
    },
    {
      "name": "bcsc_did",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "sub",
        "user.attribute": "idp_userid"
      }
    },
    {
      "name": "username",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}/${CLAIM.sub}"
      }
    },
    {
      "name": "idp_userid",
      "identityProviderAlias": "bcros",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "sub",
        "user.attribute": "idp_userid"
      }
    },
    {
      "name": "lastName",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "family_name",
        "user.attribute": "lastName"
      }
    },
    {
      "name": "lastName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "lastName",
        "user.attribute": "lastName"
      }
    },
    {
      "name": "firstName",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "given_names",
        "user.attribute": "firstName"
      }
    },
    {
      "name": "loginSource",
      "identityProviderAlias": "bcros",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "BCROS",
        "attribute": "source"
      }
    },
    {
      "name": "loginSource",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "IDIR",
        "attribute": "source"
      }
    }
  ],
  "authenticationFlows": [
    {
      "alias": "BCSC first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "BCSC first broker login Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "BCSC first broker login Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "idp-email-verification",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "BCSC first broker login Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "BCSC first broker login Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "OTP browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "DISABLED",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 30,
          "flowAlias": "OTP browser forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "OTP browser forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "OPTIONAL",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "off"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients"
}